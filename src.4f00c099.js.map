{"version":3,"sources":["framework/hooks.js","framework/element.js","utils.js","framework/context.js","framework/render.js","framework/index.js","context.js","components/banner.js","components/breed-details.js","components/breed-item.js","data/api.js","data/breedsApi.js","data/imagesApi.js","data/index.js","mappers.js","components/breeds.js","components/content.js","components/gallery.js","components/home.js","components/loading.js","components/search.js","components/index.js","components/app.js","index.js"],"names":["current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","useContext","Context","value","createElement","element","DocumentFragment","document","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","isFunction","func","createContext","defaultValue","context","Provider","Consumer","hasWarnedAboutUsingUseContext","is","renderFunction","warn","timer","render","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","AppContext","useAppContext","SearchTimerContext","useSearchTimerContext","SearchTimerPassedContext","useSearchTimerPassedContext","SearchValueContext","useSearchValueContext","Banner","girlImage","BreedDetails","currentBreed","setContent","BreedDetailsHeader","backImage","from","id","BreedDetailsBody","url","bred_for","temperament","height","weight","life_span","BreedItem","onClick","getData","apiEndpoint","Promise","resolve","reject","getCacheData","data","fetch","headers","then","response","json","setCacheData","catch","message","JSON","parse","sessionStorage","getItem","setItem","stringify","breedsApi","imagesApi","getBreeds","limit","getBreedsBySearch","search","breeds","all","map","breed","getBreedWithImageUrl","breedsWithImageUrls","filter","reference_image_id","getImagesByQuery","order","type","query","searchResultToBreedDetails","searchResult","metric","imageToBreedDetails","image","breedToBreedDetails","Breeds","setCurrentBreed","BreedsHeader","BreedsBody","setBreeds","loadingError","setLoadingError","setBreed","setOrder","setLimit","BreedsForm","event","number","BreedsList","slice","sort","prev","next","localeCompare","BreedListItem","breedDetails","ContentWrapper","content","searchValue","setSearchValue","SecondaryMenu","setTimeout","input","getElementById","selectionStart","selectionEnd","focus","Gallery","GalleryHeader","GalleryBody","breedNames","setBreedNames","setType","images","setImages","imagesChanged","setImagesChanged","names","GalleryForm","preventDefault","form","GalleryList","GalleryListItem","Home","logoImage","PrimaryMenu","items","breedsImage","galleryImage","PrimaryMenuItem","Loader","ErrorAlert","InfoAlert","Search","SearchHeader","SearchBody","searchTimer","setSearchTimer","searchTimerPassed","setSearchTimerPassed","clearTimeout","SearchList","searchResults","setSearchResults","result","SearchListItem","App"],"mappings":";AAoEO,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EAAA,QAAA,WAAA,QAAA,eAAA,QAAA,aAAA,EApEA,IAAMA,EAAU,CACrBC,gBAAgB,EAChBC,aAAc,KACdC,UAAW,MAGN,SAASC,EAAsBC,EAAKC,EAAOC,GAKzCF,OAJPL,EAAQE,aAAeG,EACvBL,EAAQG,UAAY,EACpBH,EAAQE,aAAaM,MAAQR,EAAQE,aAAaM,OAAS,GAEpDH,EAASC,EAAAA,EAAAA,GAAAA,GAAN,GAAA,CAAaC,SAAAA,IAAYA,GAG9B,SAASE,EAASC,GACfR,IAAAA,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UAChBQ,EAAUT,EAAaM,MAAML,GAE7BS,EAAO,CACXC,MAAOF,EAAUA,EAAQE,MAAQH,EACjCI,MAAO,KAGOH,EAAUA,EAAQG,MAAQ,IAElCC,QAAQ,SAAAC,GACdJ,EAAKC,MAA0B,mBAAXG,EAAwBA,EAAOJ,EAAKC,OAASG,IAU5D,OAFPd,EAAaM,MAAML,GAAaS,EAChCZ,EAAQG,YACD,CAACS,EAAKC,MAPI,SAAAG,GACfhB,EAAQC,gBAAiB,EACzBW,EAAKE,MAAMG,KAAKD,KAQb,SAASE,EAAUC,EAAQC,GACxBlB,IAAAA,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UAChBQ,EAAUT,EAAaM,MAAML,GAC7BkB,EAAUV,EAAUA,EAAQS,UAAOE,EAEnCC,EAAaC,EAAeH,EAASD,GAE3CpB,EAAQG,YAEHoB,IAEDZ,GAAWA,EAAQc,SACrBC,OAAOC,oBAAoB,eAAgBhB,EAAQc,SAGrDvB,EAAaM,MAAML,GAAa,CAC9BsB,QAASN,IACTC,KAAAA,GAGFM,OAAOE,iBAAiB,eAAgB1B,EAAaM,MAAML,GAAWsB,UASjE,QAAA,QAAA,EANA,IAAMD,EAAiB,SAACK,EAAUC,GACvC,OAACD,IACAC,GACDD,EAASE,SAAWD,EAASC,QAC7BF,EAASG,KAAK,SAACC,EAAKC,GAAUD,OAAAA,IAAQH,EAASI,MAE1C,QAAA,eAAA,EAAA,IAAMC,EAAa,SAAAC,GAAWA,OAAAA,EAAQC,OAAtC,QAAA,WAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,QAAA,mBAAA,EAnEP,IAAA,EAAA,QAAA,WAmEO,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA1DA,IAAMC,EAAgB,SAACjC,EAAKC,GAAUC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAa,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAbA,EAAa,EAAA,GAAA,UAAA,GACpD,GAAe,mBAARF,EAKF,OAAA,EAAsBA,EAAAA,uBAAAA,EAAKC,EAAOC,GAErCgC,IAAAA,EAAkB,KAARlC,EAAa,IAAImC,iBAAqBC,SAASH,cAAcjC,GAyBtEkC,OAxBPG,OAAOC,QAAQrC,GAAS,IAAIS,QAAQ,SAAmB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAjB6B,EAAiB,EAAA,GAAXP,EAAW,EAAA,GACjDO,GAAAA,EAAKC,WAAW,OAASD,EAAKE,gBAAiBpB,OACjDa,EAAQX,iBACNgB,EAAKE,cAAcC,OAAO,GAE1BV,QAGE,IACIE,aAAmBC,mBACnB,CAAC,WAAY,UAAW,YAAYQ,SAASJ,KAAUP,EACzDE,EAAQU,gBAAgBL,GAExBL,EAAQW,aAAaN,EAAMP,IAG/B,MAAOc,GACPC,QAAQC,MAAM,uBAAwBF,EAAG,KAAMZ,MAKrDhC,EAASQ,QAAQ,SAAAuC,GAASC,OAAAA,EAAYhB,EAASe,KAExCf,GAyBF,QAAA,cAAA,EAjBP,IAAMgB,EAAc,SAAdA,EAAeC,EAAQF,GACvBG,MAAMC,QAAQJ,GAChBA,EAAMvC,QAAQ,SAAA4C,GAAYJ,OAAAA,EAAYC,EAAQG,KAGjC,MAATL,GACFE,EAAOD,YAAYD,EAAMM,SAAWN,EAAQb,SAASoB,eAAeP,EAAMQ,cAWnEC,EAAiB,SAACzD,GAAUC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAX,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAWA,EAAX,EAAA,GAAA,UAAA,GAAwB+B,OAAAA,EAAA,WAAc,EAAA,CAAA,GAAIhC,GAAUC,OAAAA,KAA3E,QAAA,eAAA;;ACnEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAA,IAAMyD,EAAa,SAAAC,GAAQ,MAAgB,mBAATA,GAAlC,QAAA,WAAA;;ACiDN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAjDD,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,YAgDC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAnCM,SAASC,EAAcC,GACtBC,IAAAA,EAAU,CACd/B,MAAO8B,EACPE,SAAU,KACVC,SAAU,MAGRC,GAAgC,EA2B7BH,OAzBPA,EAAQC,SAAW,SAA8C,GAAlChC,IAAAA,EAAAA,EAAAA,MAAAA,OAAQ8B,IAAAA,EAAAA,EAA0B,EAAZ5D,EAAAA,EAAAA,SAK5CA,OAJFmC,OAAO8B,GAAGJ,EAAQ/B,MAAOA,KACpBpC,EAAAA,QAAAA,gBAAiB,EACzBmE,EAAQ/B,MAAQA,GAEX9B,GAGT6D,EAAQE,SAAW,SAAwB,GAAZ/D,IAAAA,EAAAA,EAAAA,SACtBkE,EAAkBlE,EAAAA,EAAzB,GAAA,GACI,OAAC,EAAWkE,EAAAA,YAAAA,GAYTA,EAAeL,EAAQ/B,SAX3BkC,GACCnB,QAAQsB,KACN,kCACA,KACA,sEACA,KACA,qDAEJH,GAAgC,EACzBhE,IAKJ6D;;ACvBR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAvBD,IASIO,EATJ,EAAA,QAAA,aACA,EAAA,QAAA,WAUO,SAASC,EAAOC,EAAWC,GAWhCH,EAAQI,sBAVCC,SAAAA,IACHhF,EAAQC,QAAAA,iBACFA,EAAAA,QAAAA,gBAAiB,EACzB6E,EAAOG,iBAAgB,EAAC,EAAA,eAAA,EAAxB,QAGFC,qBAAqBP,GACrBA,EAAQI,sBAAsBC;;AClBlC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,WAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,YAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;ACSO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,QAAA,mBAAA,QAAA,4BAAA,QAAA,yBAAA,QAAA,sBAAA,QAAA,mBAAA,QAAA,cAAA,QAAA,gBAAA,EAZP,IAAA,EAAA,QAAA,eAEaG,GAAa,EAAnB,EAAA,iBAUA,QAAA,WAAA,EATA,IAAMC,EAAgB,WAAM,OAAA,EAAWD,EAAAA,YAAAA,IASvC,QAAA,cAAA,EAPA,IAAME,GAAqB,EAA3B,EAAA,iBAOA,QAAA,mBAAA,EANA,IAAMC,EAAwB,WAAM,OAAA,EAAWD,EAAAA,YAAAA,IAM/C,QAAA,sBAAA,EAJA,IAAME,GAA2B,EAAjC,EAAA,iBAIA,QAAA,yBAAA,EAHA,IAAMC,EAA8B,WAAM,OAAA,EAAWD,EAAAA,YAAAA,IAGrD,QAAA,4BAAA,EADA,IAAME,GAAqB,EAA3B,EAAA,iBACA,QAAA,mBAAA,EAAA,IAAMC,EAAwB,WAAM,OAAA,EAAWD,EAAAA,YAAAA,IAA/C,QAAA,sBAAA;;;;ACAN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAVD,IAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,iCAQC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANM,SAASE,IAEZ,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,WACT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,gBAAgB,IAAKC,EAAAA;;;;ACyDrC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/DD,IAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,iCA6DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA3DM,SAASC,EAA2C,GAA5BC,IAAAA,EAAAA,EAAAA,aAAcC,EAAAA,EAAAA,WAEzC,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,0BACT,EAAC,EAAA,eAAA,EAAD,CAAoB,aAAcD,EAAc,WAAYC,KAC5D,EAAC,EAAA,eAAA,EAAD,CAAkB,aAAcD,KAKtC,SAASE,EAAiD,GAA5BF,IAAAA,EAAAA,EAAAA,aAAcC,EAAAA,EAAAA,WAExC,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,wCACZ,EAAA,EAAA,eAAA,IAAA,CACE,MAAM,mDACN,QAAS,WAAMA,OAAAA,EAAW,aAE1B,EAAA,EAAA,eAAA,MAAA,CAAK,IAAKE,EAAAA,YAEZ,EAAA,EAAA,eAAA,IAAA,CACE,MAAM,mDACN,QAAS,WAAMF,OAAAA,EAAWD,EAAaI,QAEtCJ,EAAaI,OAEhB,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,gFACNJ,EAAaK,KAMtB,SAASC,EAAmC,GAAhBN,IAAAA,EAAAA,EAAAA,aAExB,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,oCACT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,0BAA0B,IAAKA,EAAaO,OACvD,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,8BACT,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,4BAA4BP,EAAalD,OACnD,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,2BAA2BkD,EAAaQ,WAClD,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,6BACT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,kEACT,EADF,EAAA,eAAA,OAAA,KAAA,iBAEE,EAAOR,EAAAA,eAAAA,OAAAA,KAAAA,EAAaS,eAEtB,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,6DACT,EADF,EAAA,eAAA,OAAA,KAAA,YAEE,EAAUT,EAAAA,eAAAA,OAAAA,KAAAA,GAAAA,OAAAA,EAAaU,OAFzB,yBAIA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,6DACT,EADF,EAAA,eAAA,OAAA,KAAA,YAEE,EAAUV,EAAAA,eAAAA,OAAAA,KAAAA,GAAAA,OAAAA,EAAaW,OAFzB,UAIA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,+DACT,EADF,EAAA,eAAA,OAAA,KAAA,eAEE,EAAOX,EAAAA,eAAAA,OAAAA,KAAAA,EAAaY;;AC9C/B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAXD,IAAA,EAAA,QAAA,gBAEO,SAASC,EAAkC,GAAtBN,IAAAA,EAAAA,EAAAA,IAAKzD,EAAAA,EAAAA,KAAMgE,EAAAA,EAAAA,QAEnC,OAAA,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,aAAa,QAASA,IAC9B,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,oBAAoB,IAAKP,KACpC,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iDACT,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,gEAAgEzD;;ACajF,aAvBc,SAASiE,EAAQC,GACvB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACvBC,GAAAA,EAAaJ,GAAc,CACvBK,IAAAA,EAAOD,EAAaJ,GAC1BE,EAAQG,QAERC,MAAMN,EAAa,CAAEO,QAAS,CAAE,YAAA,0CAC7BC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAH,GACJM,EAAaX,EAAaK,GAC1BH,EAAQG,KAETO,MAAM,SAAA,GAAGC,IAAAA,EAAAA,EAAAA,QAAcV,OAAAA,EAAOU,OAKvC,SAAST,EAAab,GACbuB,OAAAA,KAAKC,MAAMC,eAAeC,QAAQ1B,IAG3C,SAASoB,EAAapB,EAAKc,GACzBW,eAAeE,QAAQ3B,EAAKuB,KAAKK,UAAUd,IAC5C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,kBAAA,EAxBD,IAAA,EAAA,EAAA,QAAA,UAwBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtBD,IAAMe,EAAY,sCACZC,EAAY,sCAEX,SAASC,EAAUC,GACjB,OAAA,EAAWH,EAAAA,SAAAA,GAAAA,OAAAA,EAAmBG,WAAAA,OAAAA,IAKhC,SAASC,EAAkBC,GACzB,OAAA,EAAWL,EAAAA,SAAAA,GAAAA,OAAAA,EAAsBK,cAAAA,OAAAA,IAAUjB,KAAK,SAAAkB,GAC9CzB,OAAAA,QAAQ0B,IAAID,EAAOE,IAAI,SAAAC,GAASC,OAAAA,EAAqBD,MAASrB,KAAK,SAAAuB,GACxEA,OAAAA,EAAoBC,OAAO,SAAA,GAAGlG,IAAAA,EAAAA,EAAAA,KAAMyD,EAAAA,EAAAA,IAAUzD,OAAAA,GAAQyD,QAK5D,SAASuC,EAAqBD,GACrB,OAAA,EAAWR,EAAAA,SAAAA,GAAAA,OAAAA,EAAaQ,KAAAA,OAAAA,EAAMI,qBAAsBzB,KAAK,SAAa,GAAVjB,IAAAA,EAAAA,EAAAA,IAE1DsC,OADPA,EAAMtC,IAAMA,EACLsC;;ACbV,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EATD,IAAA,EAAA,EAAA,QAAA,UASC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPD,IAAMR,EAAY,sCAEX,SAASa,EAAgD,GAA7BX,IAAAA,EAAAA,EAAAA,MAAOY,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMP,EAAAA,EAAAA,MAC/CQ,EACJ,SAASd,OAAAA,EAAeY,WAAAA,OAAAA,EAAoBC,gBAAAA,OAAAA,IAAUP,EAAqBA,aAAAA,OAAAA,GAA3E,IAEK,OAAA,EAAWR,EAAAA,SAAAA,GAAAA,OAAAA,EAAoBgB,YAAAA,OAAAA;;ACNxC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFA,IAAA,EAAA,QAAA,SAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,eAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,eAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;ACqCC,aAvCM,SAASC,EAA2BC,GAClC,MAAA,CACLlD,GAAIkD,EAAalD,GACjBvD,KAAMyG,EAAazG,KACnByD,IAAKgD,EAAahD,IAClBC,SAAU+C,EAAa/C,SACvBI,UAAW2C,EAAa3C,UACxBH,YAAa8C,EAAa9C,YAC1BE,OAAQ4C,EAAa5C,OAAO6C,OAC5B9C,OAAQ6C,EAAa7C,OAAO8C,QAIzB,SAASC,EAAoBC,GAC5BhB,IAAAA,EAASgB,EAAMhB,OAAO,IAAM,GAE3B,MAAA,CACLrC,GAAIqC,EAAOrC,IAAM,IACjBvD,KAAM4F,EAAO5F,MAAQ,UACrByD,IAAKmD,EAAMnD,KAAO,UAClBC,SAAUkC,EAAOlC,UAAY,UAC7BI,UAAW8B,EAAO9B,WAAa,UAC/BH,YAAaiC,EAAOjC,aAAe,UACnCE,OAAQ+B,EAAO/B,OAAS+B,EAAO/B,OAAO6C,OAAS,UAC/C9C,OAAQgC,EAAOhC,OAASgC,EAAOhC,OAAO8C,OAAS,WAI5C,SAASG,EAAoBd,GAC3B,MAAA,CACLxC,GAAIwC,EAAMxC,GACVvD,KAAM+F,EAAM/F,KACZyD,IAAKsC,EAAMa,MAAMnD,IACjBC,SAAUqC,EAAMrC,SAChBI,UAAWiC,EAAMjC,UACjBH,YAAaoC,EAAMpC,YACnBE,OAAQkC,EAAMlC,OAAO6C,OACrB9C,OAAQmC,EAAMnC,OAAO8C,QAExB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,2BAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,oBAAA;;ACwGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EA5ID,IAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,iCACA,EAAA,QAAA,iBACA,EAAA,QAAA,WACA,EAAA,QAAA,cAuIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EArIM,SAASI,EAAwC,GAA/B3D,IAAAA,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAEjC,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,mBACT,EAAC,EAAA,eAAA,EAAD,CAAc,WAAY5D,KAC1B,EAAC,EAAA,eAAA,EAAD,CAAY,WAAYA,EAAY,gBAAiB4D,KAK3D,SAASC,EAA6B,GAAd7D,IAAAA,EAAAA,EAAAA,WAEpB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,iCACZ,EAAA,EAAA,eAAA,IAAA,CACE,MAAM,mDACN,QAAS,WAAMA,OAAAA,EAAW,aAE1B,EAAA,EAAA,eAAA,MAAA,CAAK,IAAKE,EAAAA,YAEZ,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,kFAPX,WAcJ,SAAS4D,EAA4C,GAA/B9D,IAAAA,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAChC,EAAA,GAA4B,EAAS,EAAA,UAAA,IAArC,GAAOnB,EAAP,EAAA,GAAesB,EAAf,EAAA,GACA,EAAA,GAAwC,EAAS,EAAA,UAAA,IAAjD,GAAOC,EAAP,EAAA,GAAqBC,EAArB,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,GAAnC,GAAOrB,EAAP,EAAA,GAAcsB,EAAd,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,OAAnC,GAAOhB,EAAP,EAAA,GAAciB,EAAd,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,GAAnC,GAAO7B,EAAP,EAAA,GAAc8B,EAAd,EAAA,GAcIJ,OAZM,EAAA,EAAA,WAAA,YACE,EAAA,EAAA,WAAA,IACPzC,KAAK,SAAAkB,GACJwB,EAAgB,IAChBF,EAAUtB,KAEXd,MAAM,SAAiB,GAAdC,IAAAA,EAAAA,EAAAA,QACRmC,EAAU,IACVE,EAAgBrC,MAEnB,IAECoC,GACK,EAAC,EAAA,eAAA,EAAD,WAAA,CAAY,MAAOA,IACjBvB,GAAUA,EAAOzG,QAExB,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,6BACT,EAAC,EAAA,eAAA,EAAD,CACE,OAAQyG,EACR,MAAOG,EACP,MAAON,EACP,MAAOY,EACP,SAAUgB,EACV,SAAUE,EACV,SAAUD,KAEZ,EAAC,EAAA,eAAA,EAAD,CACE,OAAQ1B,EACR,MAAOG,EACP,MAAON,EACP,MAAOY,EACP,WAAYlD,EACZ,gBAAiB4D,MAKlB,EAAC,EAAA,eAAA,EAAD,OAAP,MAGF,SAASS,EAA0E,GAA7D5B,IAAAA,EAAAA,EAAAA,OAAQG,EAAAA,EAAAA,MAAON,EAAAA,EAAAA,MAAOY,EAAAA,EAAAA,MAAOgB,EAAAA,EAAAA,SAAUE,EAAAA,EAAAA,SAAUD,EAAAA,EAAAA,SAEnE,OAAA,EAAA,EAAA,eAAA,OAAA,CAAM,MAAM,6BACV,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,UAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,QAAS,SAAAG,GAASJ,OAAAA,GAAUI,EAAMvF,OAAOzC,UACpE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,KADhB,cAEGmG,EAAOE,IAAI,SAAA,GAAG9F,IAAAA,EAAAA,EAAAA,KAAMuD,EAAAA,EAAAA,GACnB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAOA,EAAI,SAAUwC,IAAUxC,GACpCvD,QAKT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,UAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,QAAS,SAAAyH,GAASF,OAAAA,GAAUE,EAAMvF,OAAOzC,SACnE,CAAC,EAAG,GAAI,GAAI,IAAIqG,IAAI,SAAA4B,GACnB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAOA,EAAQ,SAAUjC,IAAUiC,GACjCA,UAAAA,QAKhB,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,eAAe,QAAS,SAAAD,GAASH,OAAAA,EAASG,EAAMvF,OAAOzC,UAChE,EAAA,EAAA,eAAA,QAAA,CAAO,IAAI,OADb,QAEE,EAAA,EAAA,eAAA,QAAA,CAAO,GAAG,MAAM,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM,QAAmB,QAAV4G,KAC/D,EAAA,EAAA,eAAA,QAAA,CAAO,IAAI,QAHb,SAIE,EAAA,EAAA,eAAA,QAAA,CAAO,GAAG,OAAO,KAAK,QAAQ,KAAK,QAAQ,MAAM,OAAO,QAAmB,SAAVA,MAMzE,SAASsB,EAAyE,GAA5D/B,IAAAA,EAAAA,EAAAA,OAAQG,EAAAA,EAAAA,MAAON,EAAAA,EAAAA,MAAOY,EAAAA,EAAAA,MAAOlD,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAE3D,OAAA,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,4BACPnB,EACEM,OAAO,SAAY,GAAT3C,IAAAA,EAAAA,EAAAA,GACFwC,OAAU,IAAVA,GAAcxC,IAAOwC,IAE7B6B,MAAM,EAAGnC,QAAS/G,GAClBmJ,KAAK,SAAA,EAAA,GAASC,IAAAA,EAAN9H,EAAAA,KAAsB+H,EAAN/H,EAAAA,KACvBqG,MAAU,QAAVA,EAAkByB,EAAKE,cAAcD,GAAQA,EAAKC,cAAcF,KAEjEhC,IAAI,SAAAC,GACH,OAAA,EAAC,EAAA,eAAA,EAAD,CAAe,MAAOA,EAAO,WAAY5C,EAAY,gBAAiB4D,OAMhF,SAASkB,EAAsD,GAAtClC,IAAAA,EAAAA,EAAAA,MAAO5C,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBACpCmB,GAAe,EAAoBnC,EAAAA,qBAAAA,GAOlC,OAAA,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,IAAKmC,EAAazE,IAAK,KAAMyE,EAAalI,KAAM,QALlD,WACdmD,EAAW,iBACX4D,EAAqBmB,EAAAA,EAAAA,GAAAA,GAAN,GAAA,CAAoB5E,KAAM;;ACnE5C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAtED,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,cAEA,EAAA,QAAA,iBAmEC,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAjEM,SAAS6E,EAA+B,GAAdhF,IAAAA,EAAAA,EAAAA,WACzBiF,GAAU,EAAhB,EAAA,iBAEA,EAAA,GAAwC,EAAS,EAAA,UAAA,MAAjD,GAAOlF,EAAP,EAAA,GAAqB6D,EAArB,EAAA,GACA,EAAA,GAAsC,EAAS,EAAA,UAAA,IAA/C,GAAOsB,EAAP,EAAA,GAAoBC,EAApB,EAAA,GAEIF,MAAY,WAAZA,GAEA,EAAA,EAAA,eAAA,UAAA,CAAS,MAAM,oBACb,EAAC,EAAA,eAAA,EAAD,OADF,QAMA,EAAA,EAAA,eAAA,UAAA,CAAS,MAAM,oBACb,EAAC,EAAA,eAAA,EAAD,CACE,YAAaC,EACb,eAAgBC,EAChB,WAAYnF,IAED,WAAZiF,GACC,EAAC,EAAA,eAAA,EAAD,OAAA,CAAQ,gBAAiBrB,EAAiB,WAAY5D,IACxC,YAAZiF,GACF,EAAC,EAAA,eAAA,EAAD,QAAA,CAAS,gBAAiBrB,EAAiB,WAAY5D,IACzC,kBAAZiF,GACF,EAAC,EAAA,eAAA,EAAD,aAAA,CAAc,aAAclF,EAAc,WAAYC,KAEtD,EAAC,EAAA,eAAA,EAAD,OAAA,CACE,YAAakF,EACb,gBAAiBtB,EACjB,WAAY5D,KAOxB,SAASoF,EAA2D,GAA3CF,IAAAA,EAAAA,EAAAA,YAAalF,EAAAA,EAAAA,WAAYmF,EAAAA,EAAAA,eAe9C,MAXc,YAHA,EAAhB,EAAA,kBAIEE,WAAW,WACHC,IAAAA,EAAQ5I,SAAS6I,eAAe,kBACtCD,EAAMhJ,MAAQ4I,EACdI,EAAME,eAAiBN,EAAYlJ,OACnCsJ,EAAMG,aAAeP,EAAYlJ,OACjCsJ,EAAMI,SACL,IAIH,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,mBACT,EAAA,EAAA,eAAA,QAAA,EAAA,CACE,KAAK,SACL,aAAa,MACb,MAAM,eACN,GAAG,iBACH,YAAY,oBACZ,QAAS,WAAM1F,OAAAA,EAAW,WAC1B,QAAS,SAAAsE,GAASa,OAAAA,EAAeb,EAAMvF,OAAOzC,SACzC,OAAA;;ACwKZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAzOD,IAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,iCACA,EAAA,QAAA,iBACA,EAAA,QAAA,WACA,EAAA,QAAA,cAoOC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAlOM,SAASqJ,EAAyC,GAA/B3F,IAAAA,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAElC,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,oBACT,EAAC,EAAA,eAAA,EAAD,CAAe,WAAY5D,KAC3B,EAAC,EAAA,eAAA,EAAD,CAAa,WAAYA,EAAY,gBAAiB4D,KAK5D,SAASgC,EAA8B,GAAd5F,IAAAA,EAAAA,EAAAA,WAErB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,kCACZ,EAAA,EAAA,eAAA,IAAA,CACE,MAAM,mDACN,QAAS,WAAMA,OAAAA,EAAW,aAE1B,EAAA,EAAA,eAAA,MAAA,CAAK,IAAKE,EAAAA,YAEZ,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,kFAPX,YAcJ,SAAS2F,EAA6C,GAA/B7F,IAAAA,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBACjC,EAAA,GAAoC,EAAS,EAAA,UAAA,IAA7C,GAAOkC,EAAP,EAAA,GAAmBC,EAAnB,EAAA,GACA,EAAA,GAAwC,EAAS,EAAA,UAAA,IAAjD,GAAO/B,EAAP,EAAA,GAAqBC,EAArB,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,GAAnC,GAAOrB,EAAP,EAAA,GAAcsB,EAAd,EAAA,GACA,EAAA,GAAwB,EAAS,EAAA,UAAA,OAAjC,GAAOf,EAAP,EAAA,GAAa6C,EAAb,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,OAAnC,GAAO9C,EAAP,EAAA,GAAciB,EAAd,EAAA,GACA,EAAA,GAA0B,EAAS,EAAA,UAAA,GAAnC,GAAO7B,EAAP,EAAA,GAAc8B,EAAd,EAAA,GACA,EAAA,GAA4B,EAAS,EAAA,UAAA,MAArC,GAAO6B,EAAP,EAAA,GAAeC,EAAf,EAAA,GACA,EAAA,GAA0C,EAAS,EAAA,WAAA,GAAnD,GAAOC,EAAP,EAAA,GAAsBC,EAAtB,EAAA,GAeIpC,OAbM,EAAA,EAAA,WAAA,YACE,EAAA,EAAA,WAAA,KACPzC,KAAK,SAAAkB,GACE4D,IAAAA,EAAQ5D,EAAOE,IAAI,SAAA,GAAkB,MAAA,CAAf9F,EAAAA,KAAMuD,EAAAA,MAClC2F,EAAcM,GACdpC,EAAgB,MAEjBtC,MAAM,SAAiB,GAAdC,IAAAA,EAAAA,EAAAA,QACRmE,EAAc,IACd9B,EAAgBrC,MAEnB,IAECoC,GACK,EAAC,EAAA,eAAA,EAAD,WAAA,CAAY,MAAOA,IACjB8B,GAAcA,EAAW9J,QAEhC,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,8BACT,EAAC,EAAA,eAAA,EAAD,CACE,WAAY8J,EACZ,MAAOxD,EACP,MAAOY,EACP,KAAMC,EACN,MAAOP,EACP,cAAeuD,EACf,SAAU/B,EACV,SAAUD,EACV,QAAS6B,EACT,SAAU9B,EACV,UAAWgC,EACX,iBAAkBE,KAEpB,EAAC,EAAA,eAAA,EAAD,CACE,OAAQH,EACR,cAAeE,EACf,MAAO7D,EACP,MAAOY,EACP,KAAMC,EACN,MAAOP,EACP,UAAWsD,EACX,iBAAkBE,EAClB,WAAYpG,EACZ,gBAAiB4D,MAKhB,EAAC,EAAA,eAAA,EAAD,OAAP,MAIJ,SAAS0C,EAaN,GAZDR,IAAAA,EAAAA,EAAAA,WACAxD,EAAAA,EAAAA,MACAY,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAP,EAAAA,EAAAA,MACAuD,EAAAA,EAAAA,cACA/B,EAAAA,EAAAA,SACAD,EAAAA,EAAAA,SACA6B,EAAAA,EAAAA,QACA9B,EAAAA,EAAAA,SACAgC,EAAAA,EAAAA,UACAE,EAAAA,EAAAA,iBAGE,OAAA,EAAA,EAAA,eAAA,OAAA,CAAM,MAAM,8BACV,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,UAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,KAAK,iBAChC,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,OAAO,SAAoB,SAAVlD,GADjC,WAIE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,OAAO,SAAoB,SAAVA,GAJjC,SAOE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,MAAM,SAAoB,QAAVA,GAPhC,UAYF,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,SAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,KAAK,gBAChC,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,MAAM,SAAmB,QAATC,GADhC,QAIE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,SAAS,SAAmB,WAATA,GAJnC,WAOE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,MAAM,SAAmB,QAATA,GAPhC,eAYF,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,UAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,KAAK,iBAChC,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,IAAI,SAAoB,IAAVP,GAD9B,QAIGkD,EAAWnD,IAAI,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE9F,EAAF,EAAA,GAAQuD,EAAR,EAAA,GACd,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAOA,EAAI,SAAUwC,IAAUxC,GACpCvD,QAKT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EADF,EAAA,eAAA,QAAA,KAAA,UAEE,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,eAAe,KAAK,gBAC/B,CAAC,EAAG,GAAI,GAAI,IAAI8F,IAAI,SAAA4B,GACnB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAOA,EAAQ,SAAUjC,IAAUiC,GACxCA,EAFsB,wBAO/B,EAAA,EAAA,eAAA,SAAA,CACE,KAAK,SACL,QAAS,SAAAD,GACPA,EAAMiC,iBACNpC,EAASG,EAAMvF,OAAOyH,KAAK,GAAGlK,OAC9B0J,EAAQ1B,EAAMvF,OAAOyH,KAAK,GAAGlK,OAC7B4H,GAAUI,EAAMvF,OAAOyH,KAAK,GAAGlK,OAC/B8H,GAAUE,EAAMvF,OAAOyH,KAAK,GAAGlK,OAC/B4J,EAAU,MACVE,GAAkBD,KA7DxB,iBAsEJ,SAASM,EAUN,GATDR,IAAAA,EAAAA,EAAAA,OACAE,EAAAA,EAAAA,cACA7D,EAAAA,EAAAA,MACAY,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAP,EAAAA,EAAAA,MACAsD,EAAAA,EAAAA,UACAlG,EAAAA,EAAAA,WACA4D,EAAAA,EAAAA,gBAEA,EAAA,GAAwC,EAAS,EAAA,UAAA,IAAjD,GAAOI,EAAP,EAAA,GAAqBC,EAArB,EAAA,GAcID,OAZM,EAAA,EAAA,WAAA,YACS,EAAA,EAAA,kBAAA,CAAE1B,MAAAA,EAAOY,MAAAA,EAAOC,KAAAA,EAAMP,MAAAA,IACpCrB,KAAK,SAAA0E,GACJC,EAAUD,GACVhC,EAAgB,MAEjBtC,MAAM,SAAiB,GAAdC,IAAAA,EAAAA,EAAAA,QACRsE,EAAU,MACVjC,EAAgBrC,MAEnB,CAACuE,IAEAnC,GACK,EAAC,EAAA,eAAA,EAAD,WAAA,CAAY,MAAOA,IACjBiC,IAAWA,EAAOjK,QACpB,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,QAAQ,kBACjBiK,GAAUA,EAAOjK,QAExB,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,6BACPiK,EAAOtD,IAAI,SAAAc,GACV,OAAA,EAAC,EAAA,eAAA,EAAD,CACE,MAAOA,EACP,WAAYzD,EACZ,gBAAiB4D,QAMlB,EAAC,EAAA,eAAA,EAAD,OAAP,MAIJ,SAAS8C,EAAwD,GAAtCjD,IAAAA,EAAAA,EAAAA,MAAOzD,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBACtCmB,GAAe,EAAoBtB,EAAAA,qBAAAA,GAOlC,OAAA,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,IAAKsB,EAAazE,IAAK,KAAMyE,EAAalI,KAAM,QALlD,WACdmD,EAAW,iBACX4D,EAAqBmB,EAAAA,EAAAA,GAAAA,GAAN,GAAA,CAAoB5E,KAAM;;;;;;;;ACjL5C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EArDD,IAAA,EAAA,QAAA,wBACA,EAAA,QAAA,cAEA,EAAA,EAAA,QAAA,mCACA,EAAA,EAAA,QAAA,oCACA,EAAA,EAAA,QAAA,iCAgDC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9CM,SAASwG,EAAqB,GAAd3G,IAAAA,EAAAA,EAAAA,WAEnB,OAAA,EAAA,EAAA,eAAA,UAAA,CAAS,MAAM,SACb,EAAA,EAAA,eAAA,MAAA,CAAK,IAAK4G,EAAAA,WACV,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,aACT,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,qBADZ,mBAEE,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,kBAFX,gCAIA,EAAC,EAAA,eAAA,EAAD,CAAa,WAAY5G,KAK/B,SAAS6G,EAA4B,GAAd7G,IAAAA,EAAAA,EAAAA,WACf8G,EAAQ,CACZ,CAAEjK,KAAM,SAAU4G,MAAOsD,EAAAA,SACzB,CAAElK,KAAM,UAAW4G,MAAOuD,EAAAA,UAI1B,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,iBACT,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,qBADX,iCAEE,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,qBACPF,EAAMnE,IAAI,SAAA,GAAG9F,IAAAA,EAAAA,EAAAA,KAAM4G,EAAAA,EAAAA,MAClB,OAAA,EAAC,EAAA,eAAA,EAAD,CAAiB,KAAM5G,EAAM,MAAO4G,EAAO,WAAYzD,QAOjE,SAASiH,EAA6C,GAA3BpK,IAAAA,EAAAA,EAAAA,KAAM4G,EAAAA,EAAAA,MAAOzD,EAAAA,EAAAA,WAChCiF,GAAU,EAAhB,EAAA,iBAGE,OAAA,EAAA,EAAA,eAAA,KAAA,CACE,MAAO,qBAAuBA,IAAYpI,EAAO,6BAA+B,IAClEA,eAAAA,EACd,QAAS,WAAMmD,OAAAA,EAAWnD,MAE1B,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,qCACT,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,2BAA2B,IAAK4G,MAE7C,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,6BAA6B5G;;AC1BhD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,WAAA,EAAA,QAAA,UAAA,EAvBD,IAAA,EAAA,QAAA,gBAEO,SAASqK,IAEZ,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,eACT,EADF,EAAA,eAAA,MAAA,OAEE,EAFF,EAAA,eAAA,MAAA,OAGE,EAHF,EAAA,eAAA,MAAA,OAIE,EAJF,EAAA,eAAA,MAAA,OAKE,EALF,EAAA,eAAA,MAAA,OAME,EANF,EAAA,eAAA,MAAA,OAOE,EAPF,EAAA,eAAA,MAAA,OAQE,EARF,EAAA,eAAA,MAAA,OAaG,SAASC,EAAsB,GAAT7J,IAAAA,EAAAA,EAAAA,MACpB,OAAA,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,qBAAqBA,GAGhC,SAAS8J,EAAuB,GAAXxF,IAAAA,EAAAA,EAAAA,QACnB,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,oBAAoBA;;AC4FvC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAnHD,IAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,iCACA,EAAA,QAAA,iBACA,EAAA,QAAA,WACA,EAAA,QAAA,cA8GC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA5GM,SAASyF,EAAqD,GAA5CnC,IAAAA,EAAAA,EAAAA,YAAalF,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAE9C,OAAA,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,mBACT,EAAC,EAAA,eAAA,EAAD,CAAc,WAAY5D,KAC1B,EAAC,EAAA,eAAA,EAAD,CACE,YAAakF,EACb,WAAYlF,EACZ,gBAAiB4D,KAMzB,SAAS0D,EAA6B,GAAdtH,IAAAA,EAAAA,EAAAA,WAEpB,OAAA,EAAA,EAAA,eAAA,SAAA,CAAQ,MAAM,iCACZ,EAAA,EAAA,eAAA,IAAA,CACE,MAAM,mDACN,QAAS,WAAMA,OAAAA,EAAW,aAE1B,EAAA,EAAA,eAAA,MAAA,CAAK,IAAKE,EAAAA,YAEZ,EAAA,EAAA,eAAA,IAAA,CAAG,MAAM,kFAPX,WAcJ,SAASqH,EAAyD,GAA5CrC,IAAAA,EAAAA,EAAAA,YAAalF,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAC7C,EAAA,GAAsC,EAAS,EAAA,UAAA,MAA/C,GAAO4D,EAAP,EAAA,GAAoBC,EAApB,EAAA,GACA,EAAA,GAAkD,EAAS,EAAA,WAAA,GAA3D,GAAOC,EAAP,EAAA,GAA0BC,EAA1B,EAAA,GAaI,OAXM,EAAA,EAAA,WAAA,WAERC,aAAaJ,GACP5I,IAAAA,EAAQyG,WAAW,WACvBsC,GAAqB,IACpB,KAEHF,EAAe7I,GACf+I,GAAqB,IACpB,CAACzC,IAECA,EAEOwC,GAIV,EAAA,EAAA,eAAA,MAAA,CAAK,MAAM,6BACT,EAAC,EAAA,eAAA,EAAD,CACE,YAAaxC,EACb,kBAAmBwC,EACnB,WAAY1H,EACZ,gBAAiB4D,MARd,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,QAAQ,6BAFnB,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,QAAQ,8BAgB9B,SAASiE,EAA4E,GAA/D3C,IAAAA,EAAAA,EAAAA,YAAawC,EAAAA,EAAAA,kBAAmB1H,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBAChE,EAAA,GAA0C,EAAS,EAAA,UAAA,MAAnD,GAAOkE,EAAP,EAAA,GAAsBC,EAAtB,EAAA,GACA,EAAA,GAAwC,EAAS,EAAA,UAAA,IAAjD,GAAO/D,EAAP,EAAA,GAAqBC,EAArB,EAAA,GAgBID,OAdM,EAAA,EAAA,WAAA,WACJ0D,IACgBxC,EAAAA,EAAAA,mBAAAA,GACf3D,KAAK,SAAAkB,GACJsF,EAAiBtF,GACjBwB,EAAgB,MAEjBtC,MAAM,SAAiB,GAAdC,IAAAA,EAAAA,EAAAA,QACRmG,EAAiB,MACjB9D,EAAgBrC,MAGrB,CAAC8F,IAEA1D,GACK,EAAC,EAAA,eAAA,EAAD,WAAA,CAAY,MAAOA,IACjB8D,IAAkBA,EAAc9L,QAClC,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,QAAQ,kBACjB8L,GAAiBA,EAAc9L,QAEtC,EAAA,EAAA,eAAA,KAAA,CAAI,MAAM,4BACP8L,EAAcnF,IAAI,SAAAqF,GACjB,OAAA,EAAC,EAAA,eAAA,EAAD,CACE,OAAQA,EACR,WAAYhI,EACZ,gBAAiB4D,QAMpB,EAAC,EAAA,eAAA,EAAD,OAAP,MAGF,SAASqE,EAAwD,GAAvCD,IAAAA,EAAAA,EAAAA,OAAQhI,EAAAA,EAAAA,WAAY4D,EAAAA,EAAAA,gBACtCmB,GAAe,EAA2BiD,EAAAA,4BAAAA,GAOzC,OAAA,EAAC,EAAA,eAAA,EAAD,UAAA,CAAW,IAAKjD,EAAazE,IAAK,KAAMyE,EAAalI,KAAM,QALlD,WACdmD,EAAW,iBACX4D,EAAqBmB,EAAAA,EAAAA,GAAAA,GAAN,GAAA,CAAoB5E,KAAM;;ACxG7C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IATA,IAAA,EAAA,QAAA,SAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,YAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,mBAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,gBAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,YAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,UAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SACA,IAAA,EAAA,QAAA,YAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,IAAA,KAAA,SAAA,QAAA,KAAA,EAAA,IAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;ACSC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAhBD,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,cAEA,EAAA,QAAA,iBAaC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,eAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAXM,SAAS+H,IACgB,IAA9B,EAAA,GAA8B,EAAS,EAAA,UAAA,UAAvC,GAAOjD,EAAP,EAAA,GAAgBjF,EAAhB,EAAA,GAGE,OAAA,EACE,EAAA,eAAA,EAAA,eAAA,MAAA,EAAC,EAAA,eAAA,EAAD,WAAY,SAAZ,CAAqB,MAAOiF,IAC1B,EAAC,EAAA,eAAA,EAAD,KAAA,CAAM,WAAYjF,KAClB,EAAC,EAAA,eAAA,EAAD,eAAA,CAAgB,WAAYA;;ACXpC,aAHA,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,wBAEA,EAAOkI,EAAAA,QAAAA,EAAP,IAAYxL,SAAS6I,eAAe","file":"src.4f00c099.js","sourceRoot":"..\\src","sourcesContent":["export const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = typeof action === 'function' ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nexport const hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n\nexport const useContext = Context => Context.value;\n","import { createFunctionElement } from './hooks';\n\n/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          if (['disabled', 'checked', 'selected'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","export const isFunction = func => typeof func === 'function';\n","import { current } from '../framework';\nimport { isFunction } from '../utils';\n\n/**\n * @typedef {Object} Context\n * @property {*} Provider - Provider\n * @property {*} Consumer - Consumer\n */\n\n/**\n * Creates Context object with Provider and Consumer\n * @param {*} defaultValue - defaultValue of created context\n * @returns {Context} context object\n */\nexport function createContext(defaultValue) {\n  const context = {\n    value: defaultValue,\n    Provider: null,\n    Consumer: null,\n  };\n\n  let hasWarnedAboutUsingUseContext = false;\n\n  context.Provider = function ({ value = defaultValue, children }) {\n    if (!Object.is(context.value, value)) {\n      current.shouldReRender = true;\n      context.value = value;\n    }\n    return children;\n  };\n\n  context.Consumer = function ({ children }) {\n    const [renderFunction] = children;\n    if (!isFunction(renderFunction)) {\n      !hasWarnedAboutUsingUseContext &&\n        console.warn(\n          'Requires a function as a child.',\n          '\\n',\n          'The function receives the current context value and returns a node.',\n          '\\n',\n          'Or use useContext(Context) inside your component.',\n        );\n      hasWarnedAboutUsingUseContext = true;\n      return children;\n    }\n    return renderFunction(context.value);\n  };\n\n  return context;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target dom element\n * @param Component - funnction\n * @param target - dom element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n\n  timer = requestAnimationFrame(workLoop);\n}\n","export * from './element';\nexport * from './context';\nexport * from './hooks';\nexport * from './render';\n","import { createContext, useContext } from './framework';\n\nexport const AppContext = createContext();\nexport const useAppContext = () => useContext(AppContext);\n\nexport const SearchTimerContext = createContext();\nexport const useSearchTimerContext = () => useContext(SearchTimerContext);\n\nexport const SearchTimerPassedContext = createContext();\nexport const useSearchTimerPassedContext = () => useContext(SearchTimerPassedContext);\n\nexport const SearchValueContext = createContext();\nexport const useSearchValueContext = () => useContext(SearchValueContext);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nimport girlImage from '../../assets/images/girl.png';\n\nexport function Banner() {\n  return (\n    <div class=\"banner\">\n      <img class=\"banner__image\" src={girlImage} />\n    </div>\n  );\n}\n","/* eslint-disable prettier/prettier */\n/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nimport backImage from '../../assets/images/back.png';\n\nexport function BreedDetails({ currentBreed, setContent }) {\n  return (\n    <div class=\"breed-details content\">\n      <BreedDetailsHeader currentBreed={currentBreed} setContent={setContent} />\n      <BreedDetailsBody currentBreed={currentBreed} />\n    </div>\n  );\n}\n\nfunction BreedDetailsHeader({ currentBreed, setContent }) {\n  return (\n    <header class=\"content-header breed-details-header\">\n      <a\n        class=\"content-header__label content-header__back-label\"\n        onclick={() => setContent('banner')}\n      >\n        <img src={backImage} />\n      </a>\n      <a\n        class=\"content-header__label content-header__name-label\"\n        onclick={() => setContent(currentBreed.from)}\n      >\n        {currentBreed.from}\n      </a>\n      <a class=\"content-header__label content-header__id-label content-header__current-label\">\n        {currentBreed.id}\n      </a>\n    </header>\n  );\n}\n\nfunction BreedDetailsBody({ currentBreed }) {\n  return (\n    <div class=\"content-body breed-details-body\">\n      <img class=\"breed-details-body__img\" src={currentBreed.url} />\n      <div class=\"breed-details-body__about\">\n        <h3 class=\"breed-details-body__name\">{currentBreed.name}</h3>\n        <h4 class=\"breed-details-body__for\">{currentBreed.bred_for}</h4>\n        <div class=\"breed-details-body__info\">\n          <div class=\"breed-details-body__temperament breed-details-body__info-item\">\n            <span>Temperament:</span>\n            <span>{currentBreed.temperament}</span>\n          </div>\n          <div class=\"breed-details-body__height breed-details-body__info-item\">\n            <span>Height:</span>\n            <span>{`${currentBreed.height} cm at the withers`}</span>\n          </div>\n          <div class=\"breed-details-body__weight breed-details-body__info-item\">\n            <span>Weight:</span>\n            <span>{`${currentBreed.weight} kg`}</span>\n          </div>\n          <div class=\"breed-details-body__lifespan breed-details-body__info-item\">\n            <span>Life span:</span>\n            <span>{currentBreed.life_span}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable prettier/prettier */\n/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nexport function BreedItem({ url, name, onClick }) {\n  return (\n    <li class=\"breed-item\" onclick={onClick}>\n      <img class=\"breed-item__image\" src={url} />\n      <div class=\"breed-item__overlap breed-item__name-overlap\">\n        <h4 class=\"breed-item__overlap-heading breed-item__name-overlap-heading\">{name}</h4>\n      </div>\n    </li>\n  );\n}\n","export default function getData(apiEndpoint) {\n  return new Promise((resolve, reject) => {\n    if (getCacheData(apiEndpoint)) {\n      const data = getCacheData(apiEndpoint);\n      resolve(data);\n    } else {\n      fetch(apiEndpoint, { headers: { 'X-Api-Key': process.env.API_KEY } })\n        .then(response => response.json())\n        .then(data => {\n          setCacheData(apiEndpoint, data);\n          resolve(data);\n        })\n        .catch(({ message }) => reject(message));\n    }\n  });\n}\n\nfunction getCacheData(url) {\n  return JSON.parse(sessionStorage.getItem(url));\n}\n\nfunction setCacheData(url, data) {\n  sessionStorage.setItem(url, JSON.stringify(data));\n}\n","import getData from './api';\n\nconst breedsApi = 'https://api.thedogapi.com/v1/breeds';\nconst imagesApi = 'https://api.thedogapi.com/v1/images';\n\nexport function getBreeds(limit) {\n  return getData(`${breedsApi}?limit=${limit}`);\n}\n\n/* breeds fetched from 'breeds/search' endpoind don't contain image urls\nso we after-fetch image urls */\nexport function getBreedsBySearch(search) {\n  return getData(`${breedsApi}/search?q=${search}`).then(breeds => {\n    return Promise.all(breeds.map(breed => getBreedWithImageUrl(breed))).then(breedsWithImageUrls =>\n      breedsWithImageUrls.filter(({ name, url }) => name && url),\n    );\n  });\n}\n\nfunction getBreedWithImageUrl(breed) {\n  return getData(`${imagesApi}/${breed.reference_image_id}`).then(({ url }) => {\n    breed.url = url;\n    return breed;\n  });\n}\n","import getData from './api';\n\nconst imagesApi = 'https://api.thedogapi.com/v1/images';\n\nexport function getImagesByQuery({ limit, order, type, breed }) {\n  const query =\n    `limit=${limit}&order=${order}&mime_types=${type}` + (breed ? `&breed_id=${breed}` : ``);\n\n  return getData(`${imagesApi}/search?${query}`);\n}\n","export * from './api';\nexport * from './breedsApi';\nexport * from './imagesApi';\n","export function searchResultToBreedDetails(searchResult) {\n  return {\n    id: searchResult.id,\n    name: searchResult.name,\n    url: searchResult.url,\n    bred_for: searchResult.bred_for,\n    life_span: searchResult.life_span,\n    temperament: searchResult.temperament,\n    weight: searchResult.weight.metric,\n    height: searchResult.height.metric,\n  };\n}\n\nexport function imageToBreedDetails(image) {\n  const breeds = image.breeds[0] || {};\n\n  return {\n    id: breeds.id || '-',\n    name: breeds.name || 'no info',\n    url: image.url || 'no info',\n    bred_for: breeds.bred_for || 'no info',\n    life_span: breeds.life_span || 'no info',\n    temperament: breeds.temperament || 'no info',\n    weight: breeds.weight ? breeds.weight.metric : 'no info',\n    height: breeds.height ? breeds.height.metric : 'no info',\n  };\n}\n\nexport function breedToBreedDetails(breed) {\n  return {\n    id: breed.id,\n    name: breed.name,\n    url: breed.image.url,\n    bred_for: breed.bred_for,\n    life_span: breed.life_span,\n    temperament: breed.temperament,\n    weight: breed.weight.metric,\n    height: breed.height.metric,\n  };\n}\n","/* eslint-disable prettier/prettier */\n/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState, useEffect } from '../framework';\n\nimport backImage from '../../assets/images/back.png';\nimport { BreedItem, ErrorAlert, Loader } from '../components';\nimport { getBreeds } from '../data';\nimport { breedToBreedDetails } from '../mappers';\n\nexport function Breeds({ setContent, setCurrentBreed }) {\n  return (\n    <div class=\"content breeds\">\n      <BreedsHeader setContent={setContent} />\n      <BreedsBody setContent={setContent} setCurrentBreed={setCurrentBreed} />\n    </div>\n  );\n}\n\nfunction BreedsHeader({ setContent }) {\n  return (\n    <header class=\"content-header breeds-header\">\n      <a\n        class=\"content-header__label content-header__back-label\"\n        onclick={() => setContent('banner')}\n      >\n        <img src={backImage} />\n      </a>\n      <a class=\"content-header__label content-header__name-label content-header__current-label\">\n        breeds\n      </a>\n    </header>\n  );\n}\n\nfunction BreedsBody({ setContent, setCurrentBreed }) {\n  const [breeds, setBreeds] = useState([]);\n  const [loadingError, setLoadingError] = useState('');\n  const [breed, setBreed] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [limit, setLimit] = useState(5);\n\n  useEffect(() => {\n    getBreeds(20)\n      .then(breeds => {\n        setLoadingError('');\n        setBreeds(breeds);\n      })\n      .catch(({ message }) => {\n        setBreeds([]);\n        setLoadingError(message);\n      });\n  }, []);\n\n  if (loadingError) {\n    return <ErrorAlert error={loadingError} />;\n  } else if (breeds && breeds.length) {\n    return (\n      <div class=\"content-body breeds-body\">\n        <BreedsForm\n          breeds={breeds}\n          breed={breed}\n          limit={limit}\n          order={order}\n          setBreed={setBreed}\n          setLimit={setLimit}\n          setOrder={setOrder}\n        />\n        <BreedsList\n          breeds={breeds}\n          breed={breed}\n          limit={limit}\n          order={order}\n          setContent={setContent}\n          setCurrentBreed={setCurrentBreed}\n        />\n      </div>\n    );\n  }\n  return <Loader />;\n}\n\nfunction BreedsForm({ breeds, breed, limit, order, setBreed, setLimit, setOrder }) {\n  return (\n    <form class=\"content-form breeds-form\">\n      <div class=\"form-control\">\n        <label>breed</label>\n        <select class=\"form-control\" oninput={event => setBreed(+event.target.value)}>\n          <option value=\"0\">All breeds</option>\n          {breeds.map(({ name, id }) => (\n            <option value={id} selected={breed === id}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div class=\"form-control\">\n        <label>Limit</label>\n        <select class=\"form-control\" oninput={event => setLimit(+event.target.value)}>\n          {[5, 10, 15, 20].map(number => (\n            <option value={number} selected={limit === number}>\n              Limit: {number}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div class=\"form-control\" oninput={event => setOrder(event.target.value)}>\n        <label For=\"asc\">Asc</label>\n        <input id=\"asc\" type=\"radio\" name=\"order\" value=\"asc\" checked={order === 'asc'} />\n        <label For=\"desc\">Desc</label>\n        <input id=\"desc\" type=\"radio\" name=\"order\" value=\"desc\" checked={order === 'desc'} />\n      </div>\n    </form>\n  );\n}\n\nfunction BreedsList({ breeds, breed, limit, order, setContent, setCurrentBreed }) {\n  return (\n    <ul class=\"content-list breeds-list\">\n      {breeds\n        .filter(({ id }) => {\n          return breed !== 0 ? id === breed : true;\n        })\n        .slice(0, limit || undefined)\n        .sort(({ name: prev }, { name: next }) =>\n          order === 'asc' ? prev.localeCompare(next) : next.localeCompare(prev),\n        )\n        .map(breed => (\n          <BreedListItem breed={breed} setContent={setContent} setCurrentBreed={setCurrentBreed} />\n        ))}\n    </ul>\n  );\n}\n\nfunction BreedListItem({ breed, setContent, setCurrentBreed }) {\n  const breedDetails = breedToBreedDetails(breed);\n\n  const onClick = () => {\n    setContent('breed-details');\n    setCurrentBreed({ ...breedDetails, from: 'breeds' });\n  };\n\n  return <BreedItem url={breedDetails.url} name={breedDetails.name} onClick={onClick} />;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState } from '../framework';\nimport { useAppContext } from '../context';\n\nimport { Banner, Breeds, Gallery, Search, BreedDetails } from '../components';\n\nexport function ContentWrapper({ setContent }) {\n  const content = useAppContext();\n\n  const [currentBreed, setCurrentBreed] = useState(null);\n  const [searchValue, setSearchValue] = useState('');\n\n  if (content === 'banner') {\n    return (\n      <section class=\"content-wrapper\">\n        <Banner />\n      </section>\n    );\n  } else\n    return (\n      <section class=\"content-wrapper\">\n        <SecondaryMenu\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n          setContent={setContent}\n        />\n        {content === 'breeds' ? (\n          <Breeds setCurrentBreed={setCurrentBreed} setContent={setContent} />\n        ) : content === 'gallery' ? (\n          <Gallery setCurrentBreed={setCurrentBreed} setContent={setContent} />\n        ) : content === 'breed-details' ? (\n          <BreedDetails currentBreed={currentBreed} setContent={setContent} />\n        ) : (\n          <Search\n            searchValue={searchValue}\n            setCurrentBreed={setCurrentBreed}\n            setContent={setContent}\n          />\n        )}\n      </section>\n    );\n}\n\nfunction SecondaryMenu({ searchValue, setContent, setSearchValue }) {\n  const content = useAppContext();\n\n  // save entered value & cursor position after search input rerendering\n  if (content === 'search') {\n    setTimeout(() => {\n      const input = document.getElementById('search-control');\n      input.value = searchValue;\n      input.selectionStart = searchValue.length;\n      input.selectionEnd = searchValue.length;\n      input.focus();\n    }, 0);\n  }\n\n  return (\n    <nav class=\"secondary-menu\">\n      <input\n        type=\"search\"\n        autocomplete=\"off\"\n        class=\"form-control\"\n        id=\"search-control\"\n        placeholder=\"Search for breeds\"\n        onclick={() => setContent('search')}\n        oninput={event => setSearchValue(event.target.value)}\n        type=\"text\"\n      />\n    </nav>\n  );\n}\n","/* eslint-disable prettier/prettier */\n/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState, useEffect } from '../framework';\n\nimport backImage from '../../assets/images/back.png';\nimport { ErrorAlert, Loader, InfoAlert, BreedItem } from '../components';\nimport { getBreeds, getImagesByQuery } from '../data';\nimport { imageToBreedDetails } from '../mappers';\n\nexport function Gallery({ setContent, setCurrentBreed }) {\n  return (\n    <div class=\"gallery content\">\n      <GalleryHeader setContent={setContent} />\n      <GalleryBody setContent={setContent} setCurrentBreed={setCurrentBreed} />\n    </div>\n  );\n}\n\nfunction GalleryHeader({ setContent }) {\n  return (\n    <header class=\"gallery-header content-header\">\n      <a\n        class=\"content-header__label content-header__back-label\"\n        onclick={() => setContent('banner')}\n      >\n        <img src={backImage} />\n      </a>\n      <a class=\"content-header__label content-header__name-label content-header__current-label\">\n        gallery\n      </a>\n    </header>\n  );\n}\n\nfunction GalleryBody({ setContent, setCurrentBreed }) {\n  const [breedNames, setBreedNames] = useState([]);\n  const [loadingError, setLoadingError] = useState('');\n  const [breed, setBreed] = useState(5);\n  const [type, setType] = useState('all');\n  const [order, setOrder] = useState('asc');\n  const [limit, setLimit] = useState(5);\n  const [images, setImages] = useState(null);\n  const [imagesChanged, setImagesChanged] = useState(false);\n\n  useEffect(() => {\n    getBreeds(100)\n      .then(breeds => {\n        const names = breeds.map(({ name, id }) => [name, id]);\n        setBreedNames(names);\n        setLoadingError('');\n      })\n      .catch(({ message }) => {\n        setBreedNames([]);\n        setLoadingError(message);\n      });\n  }, []);\n\n  if (loadingError) {\n    return <ErrorAlert error={loadingError} />;\n  } else if (breedNames && breedNames.length) {\n    return (\n      <div class=\"content-body gallery-body\">\n        <GalleryForm\n          breedNames={breedNames}\n          limit={limit}\n          order={order}\n          type={type}\n          breed={breed}\n          imagesChanged={imagesChanged}\n          setLimit={setLimit}\n          setOrder={setOrder}\n          setType={setType}\n          setBreed={setBreed}\n          setImages={setImages}\n          setImagesChanged={setImagesChanged}\n        />\n        <GalleryList\n          images={images}\n          imagesChanged={imagesChanged}\n          limit={limit}\n          order={order}\n          type={type}\n          breed={breed}\n          setImages={setImages}\n          setImagesChanged={setImagesChanged}\n          setContent={setContent}\n          setCurrentBreed={setCurrentBreed}\n        />\n      </div>\n    );\n  } else {\n    return <Loader />;\n  }\n}\n\nfunction GalleryForm({\n  breedNames,\n  limit,\n  order,\n  type,\n  breed,\n  imagesChanged,\n  setLimit,\n  setOrder,\n  setType,\n  setBreed,\n  setImages,\n  setImagesChanged,\n}) {\n  return (\n    <form class=\"content-form gallery-form\">\n      <div class=\"form-control\">\n        <label>Order</label>\n        <select class=\"form-control\" name=\"galleryOrder\">\n          <option value=\"rand\" selected={order === 'rand'}>\n            Random\n          </option>\n          <option value=\"desc\" selected={order === 'desc'}>\n            Desc\n          </option>\n          <option value=\"asc\" selected={order === 'asc'}>\n            Asc\n          </option>\n        </select>\n      </div>\n      <div class=\"form-control\">\n        <label>Type</label>\n        <select class=\"form-control\" name=\"galleryType\">\n          <option value=\"all\" selected={type === 'all'}>\n            All\n          </option>\n          <option value=\"static\" selected={type === 'static'}>\n            Static\n          </option>\n          <option value=\"gif\" selected={type === 'gif'}>\n            Animated\n          </option>\n        </select>\n      </div>\n      <div class=\"form-control\">\n        <label>Breed</label>\n        <select class=\"form-control\" name=\"galleryBreed\">\n          <option value=\"0\" selected={breed === 0}>\n            None\n          </option>\n          {breedNames.map(([name, id]) => (\n            <option value={id} selected={breed === id}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div class=\"form-control\">\n        <label>Limit</label>\n        <select class=\"form-control\" name=\"galleryLimit\">\n          {[5, 10, 15, 20].map(number => (\n            <option value={number} selected={limit === number}>\n              {number} items per page\n            </option>\n          ))}\n        </select>\n      </div>\n      <button\n        role=\"submit\"\n        onclick={event => {\n          event.preventDefault();\n          setOrder(event.target.form[0].value);\n          setType(event.target.form[1].value);\n          setBreed(+event.target.form[2].value);\n          setLimit(+event.target.form[3].value);\n          setImages(null);\n          setImagesChanged(!imagesChanged);\n        }}\n      >\n        Update items\n      </button>\n    </form>\n  );\n}\n\nfunction GalleryList({\n  images,\n  imagesChanged,\n  limit,\n  order,\n  type,\n  breed,\n  setImages,\n  setContent,\n  setCurrentBreed,\n}) {\n  const [loadingError, setLoadingError] = useState('');\n\n  useEffect(() => {\n    getImagesByQuery({ limit, order, type, breed })\n      .then(images => {\n        setImages(images);\n        setLoadingError('');\n      })\n      .catch(({ message }) => {\n        setImages(null);\n        setLoadingError(message);\n      });\n  }, [imagesChanged]);\n\n  if (loadingError) {\n    return <ErrorAlert error={loadingError} />;\n  } else if (images && !images.length) {\n    return <InfoAlert message=\"No item found\" />;\n  } else if (images && images.length) {\n    return (\n      <ul class=\"content-list gallery-list\">\n        {images.map(image => (\n          <GalleryListItem\n            image={image}\n            setContent={setContent}\n            setCurrentBreed={setCurrentBreed}\n          />\n        ))}\n      </ul>\n    );\n  } else {\n    return <Loader />;\n  }\n}\n\nfunction GalleryListItem({ image, setContent, setCurrentBreed }) {\n  const breedDetails = imageToBreedDetails(image);\n\n  const onClick = () => {\n    setContent('breed-details');\n    setCurrentBreed({ ...breedDetails, from: 'gallery' });\n  };\n\n  return <BreedItem url={breedDetails.url} name={breedDetails.name} onClick={onClick} />;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework/element';\nimport { useAppContext } from '../context';\n\nimport breedsImage from '../../assets/images/breeds.png';\nimport galleryImage from '../../assets/images/gallery.png';\nimport logoImage from '../../assets/images/logo.png';\n\nexport function Home({ setContent }) {\n  return (\n    <section class=\"home\">\n      <img src={logoImage} />\n      <div class=\"greeting\">\n        <h3 class=\"greeting__heading\">Lovely dog app</h3>\n        <p class=\"greeting__text\">Designed by MacPaw company</p>\n      </div>\n      <PrimaryMenu setContent={setContent} />\n    </section>\n  );\n}\n\nfunction PrimaryMenu({ setContent }) {\n  const items = [\n    { name: 'breeds', image: breedsImage },\n    { name: 'gallery', image: galleryImage },\n  ];\n\n  return (\n    <nav class=\"primary-menu\">\n      <p class=\"primary-menu-text\">Lets start using The Dog Api</p>\n      <ul class=\"primary-menu-list\">\n        {items.map(({ name, image }) => (\n          <PrimaryMenuItem name={name} image={image} setContent={setContent} />\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nfunction PrimaryMenuItem({ name, image, setContent }) {\n  const content = useAppContext();\n\n  return (\n    <li\n      class={'primary-menu-item' + (content === name ? ' primary-menu-item--active' : '')}\n      data-content={name}\n      onclick={() => setContent(name)}\n    >\n      <div class=\"primary-menu-item__image-wrapper\">\n        <img class=\"primary-menu-item__image\" src={image} />\n      </div>\n      <button class=\"primary-menu-item__button\">{name}</button>\n    </li>\n  );\n}\n","/* eslint-disable prettier/prettier */\n/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nexport function Loader() {\n  return (\n    <div class=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport function ErrorAlert({ error }) {\n  return <p class=\"alert error-alert\">{error}</p>;\n}\n\nexport function InfoAlert({ message }) {\n  return <div class=\"alert info-alert\">{message}</div>;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState, useEffect } from '../framework';\n\nimport backImage from '../../assets/images/back.png';\nimport { ErrorAlert, Loader, InfoAlert, BreedItem } from '../components';\nimport { getBreedsBySearch } from '../data';\nimport { searchResultToBreedDetails } from '../mappers';\n\nexport function Search({ searchValue, setContent, setCurrentBreed }) {\n  return (\n    <div class=\"search content\">\n      <SearchHeader setContent={setContent} />\n      <SearchBody\n        searchValue={searchValue}\n        setContent={setContent}\n        setCurrentBreed={setCurrentBreed}\n      />\n    </div>\n  );\n}\n\nfunction SearchHeader({ setContent }) {\n  return (\n    <header class=\"content-header search-header\">\n      <a\n        class=\"content-header__label content-header__back-label\"\n        onclick={() => setContent('banner')}\n      >\n        <img src={backImage} />\n      </a>\n      <a class=\"content-header__label content-header__name-label content-header__current-label\">\n        search\n      </a>\n    </header>\n  );\n}\n\nfunction SearchBody({ searchValue, setContent, setCurrentBreed }) {\n  const [searchTimer, setSearchTimer] = useState(null);\n  const [searchTimerPassed, setSearchTimerPassed] = useState(true);\n\n  useEffect(() => {\n    // delay before search\n    clearTimeout(searchTimer);\n    const timer = setTimeout(() => {\n      setSearchTimerPassed(true);\n    }, 1000);\n\n    setSearchTimer(timer);\n    setSearchTimerPassed(false);\n  }, [searchValue]);\n\n  if (!searchValue) {\n    return <InfoAlert message=\"Please enter search query\" />;\n  } else if (!searchTimerPassed) {\n    return <InfoAlert message=\"Entering search query..\" />;\n  }\n  return (\n    <div class=\"content-body search-body\">\n      <SearchList\n        searchValue={searchValue}\n        searchTimerPassed={searchTimerPassed}\n        setContent={setContent}\n        setCurrentBreed={setCurrentBreed}\n      />\n    </div>\n  );\n}\n\nfunction SearchList({ searchValue, searchTimerPassed, setContent, setCurrentBreed }) {\n  const [searchResults, setSearchResults] = useState(null);\n  const [loadingError, setLoadingError] = useState('');\n\n  useEffect(() => {\n    if (searchTimerPassed) {\n      getBreedsBySearch(searchValue)\n        .then(breeds => {\n          setSearchResults(breeds);\n          setLoadingError('');\n        })\n        .catch(({ message }) => {\n          setSearchResults(null);\n          setLoadingError(message);\n        });\n    }\n  }, [searchTimerPassed]);\n\n  if (loadingError) {\n    return <ErrorAlert error={loadingError} />;\n  } else if (searchResults && !searchResults.length) {\n    return <InfoAlert message=\"No item found\" />;\n  } else if (searchResults && searchResults.length) {\n    return (\n      <ul class=\"content-list search-list\">\n        {searchResults.map(result => (\n          <SearchListItem\n            result={result}\n            setContent={setContent}\n            setCurrentBreed={setCurrentBreed}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return <Loader />;\n}\n\nfunction SearchListItem({ result, setContent, setCurrentBreed }) {\n  const breedDetails = searchResultToBreedDetails(result);\n\n  const onClick = () => {\n    setContent('breed-details');\n    setCurrentBreed({ ...breedDetails, from: 'search' });\n  };\n\n  return <BreedItem url={breedDetails.url} name={breedDetails.name} onClick={onClick} />;\n}\n","export * from './app';\nexport * from './banner';\nexport * from './breed-details';\nexport * from './breed-item';\nexport * from './breeds';\nexport * from './content';\nexport * from './gallery';\nexport * from './home';\nexport * from './loading';\nexport * from './search';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState } from '../framework';\nimport { AppContext } from '../context';\n\nimport { Home, ContentWrapper } from '../components';\n\nexport function App() {\n  const [content, setContent] = useState('banner');\n\n  return (\n    <>\n      <AppContext.Provider value={content}>\n        <Home setContent={setContent} />\n        <ContentWrapper setContent={setContent} />\n      </AppContext.Provider>\n    </>\n  );\n}\n","import { render } from './framework';\nimport { App } from './components/app.js';\n\nrender(App, document.getElementById('main'));\n"]}